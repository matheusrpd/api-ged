"use strict";
/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
Object.defineProperty(exports, "__esModule", { value: true });
const dateAlfresco_1 = require("../../content-rest-api/model/dateAlfresco");
const groupCapabilityRepresentation_1 = require("./groupCapabilityRepresentation");
const userRepresentationGroup_1 = require("./userRepresentationGroup");
class GroupRepresentation {
    constructor(input) {
        if (input) {
            Object.assign(this, input);
            if (input.capabilities) {
                this.capabilities = input.capabilities.map((item) => {
                    return new groupCapabilityRepresentation_1.GroupCapabilityRepresentation(item);
                });
            }
            if (input.groups) {
                this.groups = input.groups.map((item) => {
                    return new GroupRepresentation(item);
                });
            }
            this.lastSyncTimeStamp = input.lastSyncTimeStamp ? dateAlfresco_1.DateAlfresco.parseDate(input.lastSyncTimeStamp) : undefined;
            this.manager = input.manager ? new userRepresentationGroup_1.UserRepresentationGroup(input.manager) : undefined;
            if (input.users) {
                this.users = input.users.map((item) => {
                    return new userRepresentationGroup_1.UserRepresentationGroup(item);
                });
            }
        }
    }
}
exports.GroupRepresentation = GroupRepresentation;
//# sourceMappingURL=groupRepresentation.js.map